#include <stdio.h>
#include <string.h>


int main() {
    char arr1[] = "abc";
    char arr2[] = {'a','b','c'};
    printf("%lu\n",sizeof(arr1));  // 4  注意，如果数组类型是int，则一个元素占4个字节
    printf("%lu\n",sizeof(arr2));  // 3
    printf("%lu\n",strlen(arr1));  // 3
    printf("%lu\n",strlen(arr2));  // 3  // 不同环境测试可能不同，可能会出现随机值

    return 0;
}


//看以下的区别

#include <stdio.h>

int main() {
    int arr[] = {1,2,3,4,5,6,7,8,9,10};
    int sz = sizeof(arr)/sizeof(int);
    int i = 0;
    for(i = 0; i<sz;i++){
        printf("%d\n",arr[i]);
    }

    return 0;
}


#include <stdio.h>
// 二维数组
int main() {
    int arr[3][4] = {{1,2,3},{4,5}};
    int i = 0;
    for(i=0;i<3;i++){
        int j = 0;
        for(j=0;j<4;j++){
            printf("&arr[%d][%d] = %p\n",i,j,&arr[i][j]);
        }
    }
    return 0;
}
/*
bash-3.2$ gcc ctest.c 
bash-3.2$ ./a.out 
&arr[0][0] = 0x16f3e7298
&arr[0][1] = 0x16f3e729c
&arr[0][2] = 0x16f3e72a0
&arr[0][3] = 0x16f3e72a4
&arr[1][0] = 0x16f3e72a8
&arr[1][1] = 0x16f3e72ac
&arr[1][2] = 0x16f3e72b0
&arr[1][3] = 0x16f3e72b4
&arr[2][0] = 0x16f3e72b8
&arr[2][1] = 0x16f3e72bc
&arr[2][2] = 0x16f3e72c0
&arr[2][3] = 0x16f3e72c4
*/
