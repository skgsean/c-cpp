
#include <stdio.h>
// struct - 结构体关键字
// Stu - 结构体标签
// struct Stu - 结构体类型
struct Stu
{
    // 成员变量
    char name[20];
    short age;
    char tele[12];
    char sex[5];
};


int main()
{
    struct Stu s;  // s是局部的变量
    return 0;
}



// 结构体初始化时给全局变量
#include <stdio.h>
// struct - 结构体关键字
// Stu - 结构体标签
// struct Stu - 结构体类型
struct Stu
{
    // 成员变量
    char name[20];
    short age;
    char tele[12];
    char sex[5];
}s1,s2,s3;  // 三个全局结构体变量


int main()
{
    struct Stu s;  // s是局部的结构体变量
    return 0;
}



#include <stdio.h>
// struct - 结构体关键字
// Stu - 结构体标签
// struct Stu - 结构体类型
typedef struct Stu  // 用typedef给结构体重命名
{
    // 成员变量
    char name[20];
    short age;
    char tele[12];
    char sex[5];
}Stu;  


int main()
{
    struct Stu s1;  // s是局部的结构体变量
    Stu s2;  // 用重命名的结构体名称声明结构体变量
    return 0;
}



#include <stdio.h>
// struct - 结构体关键字
// Stu - 结构体标签
// struct Stu - 结构体类型
typedef struct Stu  // 用typedef给结构体重命名
{
    // 成员变量
    char name[20];
    short age;
    char tele[12];
    char sex[5];
}Stu;  


int main()
{
    struct Stu s1 = {"张三",20,"13800138000","男"};  // 初始化
    Stu s2 = {"张五",25,"13800138000","保密"};
    return 0;
}




// 结构体放结构体
#include <stdio.h>
struct s
{
    int a;
    char c;
    char arr[20];
    double d;
};

struct t
{
    char ch[10];
    struct s s;
    char *pc;
};

int main()
{
    char arr[] = "hello bit\n";
    struct t t = {"hehe", {100, 'w', "hello world", 3.14}, arr};
    printf("%s\n", t.ch); // hehe
    printf("%s\n", t.s.arr); // hello world
    printf("%lf\n", t.s.d); // 3.14
    printf("%s\n", t.pc);  //hello bit

    return 0;
}




// 结构体
#include <stdio.h>
typedef struct Stu
{
    // 姓名名称
    char name[20];
    short age;
    char tele[12];
    char sex[5];
} Stu;

void Print1(Stu *tmp)
{
    printf("name: %s\n", tmp->name);
    printf("age: %d\n", tmp->age);
    printf("tele: %s\n", tmp->tele);
    printf("sex: %s\n", tmp->sex);
}

int main()
{
    Stu s = {"李四", 40, "15598886688", "男"};
    Print1(&s);
    return 0;
}

